% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/catalogue.R
\name{catalogue}
\alias{catalogue}
\title{This method runs the DBSCAN algorithm (if cluster_id is NULL) and obtains the mean positivity rate (PR) of each cluster extended with the non-infected cases closer than the link_d.}
\usage{
catalogue(
  x,
  y,
  test_result,
  link_d,
  prevalence = NULL,
  cluster_id = NULL,
  min_neighbours = 2,
  max_p = 1,
  min_pos = 2,
  min_total = 2,
  min_pr = 0,
  method = "base",
  keep_null_tests = FALSE,
  in_latlon = FALSE,
  to_epsg = NULL,
  n_sim = 10000,
  max_epi_cont = 0.5,
  max_thr_data = 0.1,
  consider_fd = FALSE,
  n_simulations = 500,
  optimize_link_d = FALSE,
  verbose = FALSE
)
}
\arguments{
\item{x}{Vector of y positions.}

\item{test_result}{vector of test results (0 or 1).}

\item{link_d}{The linking distance to connect cases. Should be in the same scale as the positions.}

\item{prevalence}{Probability of having an infected case for each individual.}

\item{cluster_id}{Numeric vector with the cluster IDs of each position, with 0 for those without a cluster. Give NULL if cluster_id must be calculated.}

\item{min_neighbours}{Minium number of neighbours in the radius < link_d needed to link cases as friends.}

\item{max_p}{Maximum value of the p-value to consider the cluster detection.}

\item{min_pos}{Threshold of minimum number of positive cases in clusters applied.}

\item{min_total}{Threshold of minimum number of cases in clusters applied.}

\item{min_pr}{Threshold of minimum positivity rate in clusters applied.}

\item{method}{Method that wants to be used to compute the local prevalence - either 'kmeans', 'centroid', or 'base'. Defaults to 'base'.}

\item{keep_null_tests}{Whether to remove or not missings. If numeric, provide value to impute.}

\item{in_latlon:}{If True, x and y coordinates are treated as longitude and latitude respectively, otherwise they are treated as cartesian coordinates.}

\item{to_epsg:}{If in_latlon is True, x and y are reprojected to this EPSG.}

\item{n_sim:}{Number of observations in each of the simulations to be performed. Will help during p-value calculus. Applies to "kmeans" method.}

\item{max_epi_cont:}{Maximum contribution of the detected Epifriends with respect to the total local data selected. Only applies for "centroid" method.}

\item{max_thr_data:}{Percentage of data used to compute the local prevalence. Only applies for "centroid" method.}

\item{consider_fd:}{If True, consider false detections and adjust p-value of that.}

\item{n_simulations:}{Numeric value with the number of desired iterations to compute the false-detected clusters.}

\item{optimize_link_d:}{If True, optimize the linking distance based on minimum distribution of distances between neighbors.}

\item{verbose:}{If TRUE, print information of the process; else, do not print.}
}
\value{
List with the next objects:
cluster_id: numeric vector
  Vector of the cluster IDs of each position, with 0 for those
  without a cluster.
mean_pr_cluster: numeric vector
  Mean PR corresponding to cluster_id.
pval_cluster: numeric vector
  P-value corresponding to cluster_id.
epifriends_catalogue: List
  Catalogue of the epifriends clusters and their main characteristics.
}
\description{
This method runs the DBSCAN algorithm (if cluster_id is NULL) and obtains the mean positivity rate (PR) of each cluster extended with the non-infected cases closer than the link_d.
}
\details{
The epifriends package uses the RANN package which can gives the exact nearest neighbours using the friends of friends algorithm. For more information on the RANN library please visit https://cran.r-project.org/web/packages/RANN/RANN.pdf
}
\examples{
# Required packages
if(!require("RANN")) install.packages("RANN")
library("RANN")

# Creation of x vector of longitude coordinates, y vector of latitude coordinates and finaly merge them on a position data frame.
x <- c(1,2,3,4,7.5,8,8.5,9,10,13,13.1,13.2,13.3,14,15,30)
y <- c(1,2,3,4,7.5,8,8.5,9,10,13,13.1,13.2,13.3,14,15,30)

# Creation of test data frame with 0 for negative cases and 1 for positive clases for each position.
test <- c(0,1,1,0,1,0,1,1,0,0,0,0,1,0,1,1)

# Creation of catalogue for this positions, linking distance 2 and default values.
cat <- catalogue(x, y, test, 2)

}
\author{
Mikel Majewski Etxeberria based on earlier python code by Arnau Pujol.
}
