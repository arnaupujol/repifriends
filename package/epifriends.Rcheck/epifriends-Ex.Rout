
R version 4.1.1 (2021-08-10) -- "Kick Things"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "epifriends"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> options(pager = "console")
> library('epifriends')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("catalogue")
> ### * catalogue
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: catalogue
> ### Title: This method runs the DBSCAN algorithm (if cluster_id is NULL)
> ###   and obtains the mean positivity rate (PR) of each cluster extended
> ###   with the non-infected cases closer than the link_d.
> ### Aliases: catalogue
> 
> ### ** Examples
> 
> # Required packages
> if(!require("RANN")) install.packages("RANN")
Loading required package: RANN
Warning: package 'RANN' was built under R version 4.1.3
> library("RANN")
> 
> # Creation of x vector of longitude coordinates, y vector of latitude coordinates and finaly merge them on a position data frame.
> x <- c(1,2,3,4,7.5,8,8.5,9,10,13,13.1,13.2,13.3,14,15,30)
> y <- c(1,2,3,4,7.5,8,8.5,9,10,13,13.1,13.2,13.3,14,15,30)
> pos <- data.frame(x,y)
> 
> # Creation of test data frame with 0 for negative cases and 1 for positive clases for each position.
> test <- data.frame(c(0,1,1,0,1,0,1,1,0,0,0,0,1,0,1,1))
> 
> # Creation of catalogue for this positions, linking distance 2 and default values.
> cat <- catalogue(pos, test, 2)
> 
> 
> 
> cleanEx()

detaching 'package:RANN'

> nameEx("dbscan")
> ### * dbscan
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: dbscan
> ### Title: This method finds the DBSCAN clusters from a set of positions
> ###   and returns their cluster IDs.
> ### Aliases: dbscan
> 
> ### ** Examples
> 
> # Required packages
> if(!require("RANN")) install.packages("RANN")
Loading required package: RANN
Warning: package 'RANN' was built under R version 4.1.3
> library("RANN")
> 
> # Creation of x vector of longitude coordinates, y vector of latitude coordinates and finaly merge them on a position data frame.
> x <- c(1,2,3,4,7.5,8,8.5,9,10,13,13.1,13.2,13.3,14,15,30)
> y <- c(1,2,3,4,7.5,8,8.5,9,10,13,13.1,13.2,13.3,14,15,30)
> pos <- data.frame(x,y)
> 
> # Computation of clusters of hotspots for positions with dbscan algorithm using linking distance 2 and minimum 3 neighbours.
> db <- dbscan(pos, 2 ,3)
> 
> 
> 
> cleanEx()

detaching 'package:RANN'

> nameEx("temporal_catalogue")
> ### * temporal_catalogue
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: temporal_catalogue
> ### Title: This method generates a list of EpiFRIenDs catalogues
> ###   representing different time frames by including only cases within a
> ###   time window that moves within each time step.
> ### Aliases: temporal_catalogue
> 
> ### ** Examples
> 
> # Required packages
> if(!require("RANN")) install.packages("RANN")
Loading required package: RANN
Warning: package 'RANN' was built under R version 4.1.3
> if(!require("chron")) install.packages("chron")
Loading required package: chron
Warning: package 'chron' was built under R version 4.1.3
> library("RANN")
> library("chron")
> 
> # Creation of x vector of longitude coordinates, y vector of latitude coordinates and finaly merge them on a position data frame.
> x <- c(1,2,3,4,7.5,8,8.5,9,10,13,13.1,13.2,13.3,14,15,30)
> y <- c(1,2,3,4,7.5,8,8.5,9,10,13,13.1,13.2,13.3,14,15,30)
> pos <- data.frame(x,y)
> 
> # Creation of test data frame with 0 for negative cases and 1 for positive clases for each position.
> test <- data.frame(c(0,1,1,0,1,0,1,1,0,0,0,0,1,0,1,1))
> 
> #Creation of chron dates vector in format 'y-m-d h:m:s'.
> dates <- c("2020-11-03 05:33:07","2021-05-19 10:29:59","2021-02-09 14:53:20","2021-11-21 02:35:38","2020-11-19 05:57:24",
+ "2021-06-09 07:50:30","2021-09-18 05:53:26","2020-03-19 17:16:56","2021-06-08 12:40:46","2020-06-26 05:01:31",
+ "2020-10-15 04:40:27","2021-05-28 15:23:23","2020-05-01 02:56:54","2020-08-19 22:45:35","2021-10-23 18:56:35",
+ "2020-10-19 00:01:25")
> 
> # Creation of temporal catalogue for this data.
> tcat <- tcat <- temporal_catalogue(pos, test, dates ,link_d = 2, time_width = 305, time_steps = 305, linking_time = 3, linking_dist = 2)
Error in matrix(NA, length(catalogue_list[[t]]$id)) : data is too long
Calls: temporal_catalogue -> add_temporal_id -> data.frame -> matrix
Execution halted
